{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Details.svelte",
    "../../Footer.svelte",
    "../../GeneralSearch.svelte",
    "../../LoadingIndicator.svelte",
    "../../MapView.svelte",
    "../../CategoryFilter.svelte",
    "../../OptionFilter.svelte",
    "../../SearchItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {onMount} from 'svelte'\n    import { _, locale } from 'svelte-i18n'\n    import {data} from './stores'\n    import 'bulma/css/bulma.css'\n    import loadFeatures from './utils/loadFeatures'\n\n    import Footer from './components/Footer.svelte'\n    import MapView from './components/MapView.svelte'\n    import LoadingIndicator from './components/LoadingIndicator.svelte'\n    import Details from './components/Details.svelte'\n    import Filters from './components/Filters.svelte'\n\n    onMount(() => {\n        (async () => {\n            // Load the data from the Drive Spreadsheet\n            const db = await drive(\"1Z3pNCmtJhVNwo_tJDnb1i_qAsxYEglRPN9lztTATIVM\");\n            data.set({\"type\": \"FeatureCollection\", features: loadFeatures(db)})\n        })();\n    })\n</script>\n\n<main>\n    <div class=\"language-buttons\">\n        <button class=\"language-button\" on:click={() => locale.set('en')}>English</button>\n        <button class=\"language-button\" on:click={() => locale.set('es')}>Español</button>\n        <button class=\"language-button\" on:click={() => locale.set('zh')}>中文</button>\n    </div>\n    <h3 class=\"title is-3\">{$_('site_header.title')}</h3>\n    <p class=\"is-6 subtitle\">\n        <strong>{$_('site_header.subtitle')}</strong>\n    </p>\n    <Filters/>\n    <div class=\"panel\">\n        <div class=\"panel-left\">\n            {#if !$data}\n                <LoadingIndicator/>\n            {:else}\n                <Details/>\n            {/if}\n        </div>\n        <div class=\"panel-right\">\n            <MapView/>\n        </div>\n    </div>\n    <Footer/>\n</main>\n\n<style>\n    main {\n        margin: 20px auto;\n        max-width: 1500px;\n        color: #444;\n        padding: 0 25px;\n    }\n\n    .panel {\n        display: flex;\n        flex-wrap: wrap;\n        min-height: 600px;\n    }\n\n    .panel-left {\n        flex: 1 1 300px;\n        padding: 1rem;\n    }\n\n    .panel-right {\n        flex: 1 1 340px;\n        min-width: 340px;\n        min-height: 500px;\n    }\n\n    :global(.is-1, .is-2, .is-3, .is-4, .is-5, .is-6, .is-7) {\n        font-family: 'Merriweather', serif;\n    }\n\n    .info {\n        padding: 0.5rem 1rem;\n        margin-bottom: 1rem;\n    }\n\n    .language-buttons {\n        display: none;\n        margin-bottom: 1rem;\n    }\n\n    .language-button {\n        display: inline-block;\n        display: none;\n        border: none;\n        font-family: 'Merriweather', serif;\n        font-size: 1rem;\n        font-weight: 700;\n        color: #3273dc;\n        cursor: pointer;\n    }\n\n\n</style>\n",
    "<script>\n    import { _ } from 'svelte-i18n'\n    import marked from 'marked';\n    import {details} from '../stores'\n    import NotEmpty from './details/NotEmpty.svelte'\n    import {getValidUrl, getValidInstagram} from '../utils/getValidUrl'\n    import {formatPhoneNumber} from '../utils/textFormating'\n</script>\n\n{#if $details}\n    <div class=\"content has-background-ter\">\n        <h4 class=\"is-4\">{$details.merchantname}</h4>\n        <p><strong>{$details.overallcategory}</strong> - {$details.subcategory}</p>\n        <hr/>\n\n        <NotEmpty value={$details.address}>\n            <p><strong>{$_('details.address')}:</strong> {$details.address}</p>\n        </NotEmpty>\n\n\n        <NotEmpty value={$details.number}>\n            <p><strong>#:</strong> <a href=\"tel:{formatPhoneNumber($details.number)}\"\n                                      class=\"\">{formatPhoneNumber($details.number)}</a></p>\n        </NotEmpty>\n\n        <div class=\"field is-grouped margin\">\n            <NotEmpty value={$details.websiteownerrundeliverypreferred}>\n                <p><strong><a href=\"{getValidUrl($details.websiteownerrundeliverypreferred)}\"\n                              target=\"_blank\">{$_('details.website')}</a></strong></p>\n            </NotEmpty>\n\n            <NotEmpty value={$details.instagramfulllinknothandle}>\n                <p><strong><a href=\"{getValidInstagram($details.instagramfulllinknothandle)}\"\n                              target=\"_blank\">Instagram</a></strong></p>\n            </NotEmpty>\n        </div>\n\n        <hr/>\n        <NotEmpty show={$details.opentime && $details.closetime}>\n            <h5 class=\"is-5\">Hours</h5>\n            <p><strong>{$_('details.open_time')}</strong> {$details.opentime}</p>\n            <p><strong>{$_('details.close_time')}</strong> {$details.closetime}</p>\n        </NotEmpty>\n\n        <div class=\"field is-grouped is-grouped-multiline\">\n            <div class=\"control\">\n                <div class=\"tags has-addons\">\n                    <span class=\"tag\">{$_('details.takeout')}</span>\n                    <span class=\"tag {$details.takeoutyorn === 'Y'  ? 'is-success' : 'is-white'}\">\n                        {$details.takeoutyorn === 'Y' ? 'Yes' : '-'}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"control\">\n                <div class=\"tags has-addons\">\n                    <span class=\"tag\">{$_('details.delivery')}</span>\n                    <span class=\"tag {$details.deliveryyorn === 'Y'  ? 'is-success' : 'is-white'}\">\n                        {$details.deliveryyorn === 'Y' ? 'Yes' : '-'}\n                    </span>\n                </div>\n            </div>\n\n            <NotEmpty value={$details.shippingyorn} show={$details.shippingyorn === 'Y'}>\n                <div class=\"control\">\n                    <div class=\"tags has-addons\">\n                        <span class=\"tag\">{$_('details.shipping')}</span>\n                        <span class=\"tag {$details.shippingyorn === 'Y'  ? 'is-success' : 'is-white'}\">\n                        {$details.shippingyorn === 'Y' ? 'Yes' : '-'}\n                    </span>\n                    </div>\n                </div>\n            </NotEmpty>\n        </div>\n\n\n        <NotEmpty value={$details.notes}>\n            <p><strong>{$_('details.notes')}: </strong>{@html marked($details.notes)}</p>\n        </NotEmpty>\n\n        {#if $details.buyagiftcardtosupportyourfavoriteevmerchantorganization || $details.supportyourfavoriteevmerchantorganizationsfundraiser}\n            <hr>\n            <div class=\"field is-grouped is-grouped-multiline support\">\n                <div class=\"tags\">\n                    {#if $details.buyagiftcardtosupportyourfavoriteevmerchantorganization}\n                        <a href=\"{getValidUrl($details.buyagiftcardtosupportyourfavoriteevmerchantorganization)}\"><span\n                                target=\"_blank\" class=\"tag is-link\">{$_('details.buy_a_giftcard')}</span></a>\n                    {/if}\n\n                    {#if $details.supportyourfavoriteevmerchantorganizationsfundraiser}\n                        <a href=\"{getValidUrl($details.supportyourfavoriteevmerchantorganizationsfundraiser)}\"><span\n                                target=\"_blank\" class=\"tag is-link\">{$_('details.contribute_to_fundraiser')}</span></a>\n                    {/if}\n                </div>\n            </div>\n        {/if}\n\n        <hr>\n\n        <p class=\"has-text-grey-light\">{$_('details.last_updated', {values: { lastUpdated: $details.dateupdated} })} ID: {$details.id}</p>\n        <NotEmpty value={$details.sourceofinformationforopenclosedpleaseensurethereisasourceforclosedorgsbusinesses}>\n            <p>{@html $_('details.source_link', { values: {\n                url: getValidUrl($details.sourceofinformationforopenclosedpleaseensurethereisasourceforclosedorgsbusinesses)\n            }})}</p>\n        </NotEmpty>\n    </div>\n{:else}\n    <div class=\"content has-background-ter\">\n        <h4 class=\"is-4\">{$_('details.click_on_a_point')}</h4>\n    </div>\n{/if}\n\n\n<style>\n    .content {\n        padding: 0.5rem 0.5rem;\n    }\n\n    .margin p {\n        margin-right: 1rem;\n    }\n\n    .support .tag {\n        margin-right: 5px;\n    }\n</style>",
    "<footer>\n    <p class=\"is-6\">Updated frequently and with ❤️️ by Perry Leung, EVCC, EV Grieve, and Paul Gale. If you are a\n        business owner and\n        want to add or edit your information, please fill out this form <a\n                target=\"_blank\"\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfYUHbMfytsaSwbPhrCtSWbgflRqVOoASoSbggzjzOV4CK5CA/viewform\">here</a>.\n        Any suggestions or want to help? Email us at <a\n                href=\"mailto:whatsopenev@gmail.com\">whatsopenev@gmail.com</a>.\n    </p>\n    <figure>\n        <img\n                class=\"logo\"\n                alt=\"BetaNYC Logo\"\n                src=\"images/BetaNYC_short_white_on_blue.png\"\n        />\n        <figcaption class=\"logo_caption\">A <a href=\"https://beta.nyc/\" target=\"_blank\">BetaNYC</a> Tool</figcaption>\n    </figure>\n\n</footer>\n\n<style>\n    footer {\n        text-align: center;\n        margin-top: 1rem;\n    }\n\n    figure{\n        margin-top: 10px;\n    }\n\n    .logo {\n        width: 20px;\n        margin: auto;\n        display: block;\n    }\n\n    .logo_caption {\n        font-size: 0.6rem;\n        margin-top: 5px;\n        text-align: center;\n    }\n\n\n</style>",
    "<script>\n    import { _ } from 'svelte-i18n'\n    import {mapView, data, details} from '../stores'\n    import SearchItem from './search/SearchItem.svelte'\n    import Fuse from 'fuse.js'\n\n    export let textSearch = ''\n    let value = ''\n    let searchAddrs = []\n    let error = false\n    let features = []\n    let fuse = null\n\n    $: if ($data && $data.features) {\n        features = $data.features.sort((a, b) => a.properties.merchantname.localeCompare(b.properties.merchantname))\n        fuse = new Fuse(features, {\n            isCaseSensitive: false,\n            includeMatches: true,\n            minMatchCharLength: 1,\n            threshold: 0.4,\n            keys: [\n                \"properties.merchantname\",\n                \"properties.overallcategory\",\n                \"properties.subcategory\"\n            ]\n        });\n    }\n\n    let markerLayer = null;\n\n    function _set(addr) {\n        //set value to clicked addr , then clear searchAddrs\n        if (addr) value = addr.item.properties.merchantname\n        searchAddrs = []\n        const coords = addr.item.geometry.coordinates.slice().reverse() // reverse no side-effects\n        $mapView.setView(coords, 18)\n        details.set(addr.item.properties)\n\n        //add marker to map\n        if (!markerLayer) {\n            markerLayer = L.circleMarker(coords, {\n                radius: 15,\n                fillColor: \"#f7ff45\",\n                color: \"#000\",\n                weight: 0,\n                opacity: 1,\n                fillOpacity: 0.8\n            });\n            markerLayer.addTo($mapView);\n        } else {\n            markerLayer.setLatLng(coords)\n        }\n\n    }\n\n    function _search() {\n        if (value.length > 1) {\n            const matchedFeatures = fuse.search(value);\n            searchAddrs = matchedFeatures.splice(0, 5)\n        } else {\n            searchAddrs = []\n        }\n        return true\n    }\n</script>\n\n<form on:submit|preventDefault=\"{_set(searchAddrs[0])}\">\n    <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n            <label class=\"label\">{$_('search.search_by_name')}</label>\n        </div>\n        <div class=\"field-body\">\n            <div class=\"field\">\n                <div class=\"control is-expanded\">\n                    <input\n                            id=\"address\"\n                            placeholder=\"{$_('search.search_placeholder')}\"\n                            type=\"text\"\n                            name=\"address\"\n                            bind:value\n                            autocomplete=\"off\"\n                            on:keyup=\"{() => {_search(); error = false;}}\"\n                            class=\"{!error ? 'input is-fullwidth' : 'input is-fullwidth is-danger'}\"\n                    />\n                </div>\n            </div>\n            <button type=\"submit\" class=\"button\">{$_('search.search_button')}</button>\n        </div>\n    </div>\n\n    {#if searchAddrs.length}\n        <ul>\n            {#each searchAddrs as addr (addr.refIndex)}\n                <SearchItem {addr} on:set={({detail}) => _set(detail)}/>\n            {/each}\n        </ul>\n    {/if}\n<!--    {#if searchAddrs.length === 0 && value !== ''}-->\n<!--        <p class=\"help is-danger\">-->\n<!--            {$_('search.no_addresses_found_error')}-->\n<!--        </p>-->\n<!--    {/if}-->\n\n</form>\n\n<style>\n    form {\n        margin-bottom: 1rem;\n    }\n\n    #address {\n        width: 100%;\n        padding: 5px 15px;\n        box-sizing: border-box;\n        margin-bottom: 5px;\n    }\n\n    input[type='submit'] {\n        background-color: #6a6a6a;\n        border: none;\n        color: white;\n        padding: 5px 10px;\n        text-decoration: none;\n        cursor: pointer;\n    }\n\n    ul {\n        color: rgb(61, 61, 61);\n        margin: 0px !important;\n        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    }\n\n    ::placeholder {\n        color: #4d4d4d;\n        font-weight: 300;\n    }\n</style>",
    "<script>\n  //from https://github.com/tobiasahlin/SpinKit\n  import { _ } from 'svelte-i18n'\n</script>\n\n<div class=\"loading-box\">\n  <div class=\"spinner\"></div>\n  <p>{$_('loading')}</p>\n</div>\n\n<style>\n  .loading-box {\n    margin: 100px auto;\n  }\n  .spinner {\n    width: 30px;\n    height: 30px;\n    background-color: #2866b3;\n\n    -webkit-animation: sk-rotateplane 1.2s infinite ease-in-out;\n    animation: sk-rotateplane 1.2s infinite ease-in-out;\n  }\n\n  @-webkit-keyframes sk-rotateplane {\n    0% {\n      -webkit-transform: perspective(120px);\n    }\n    50% {\n      -webkit-transform: perspective(120px) rotateY(180deg);\n    }\n    100% {\n      -webkit-transform: perspective(120px) rotateY(180deg) rotateX(180deg);\n    }\n  }\n\n  @keyframes sk-rotateplane {\n    0% {\n      transform: perspective(120px) rotateX(0deg) rotateY(0deg);\n      -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg);\n    }\n    50% {\n      transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\n      -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\n    }\n    100% {\n      transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n      -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n    }\n  }\n</style>\n",
    "<script>\n    import {onMount} from 'svelte'\n    import {mapView, data, details, filters} from '../stores'\n\n    let container\n    let map\n    let layer\n\n    function generateLayer(data, filter = () => true) {\n        return L.geoJSON(data, {\n            pointToLayer: feature => feature.properties.icon,\n            onEachFeature: (feature, layer) => {\n                const {merchantname, overallcategory} = feature.properties\n                layer.bindPopup(`<p><strong>${merchantname}</strong></p><p>${overallcategory}</p>`)\n                layer.on('click', () => details.set(feature.properties))\n            },\n            filter\n        })\n    }\n\n    onMount(() => {\n        const maxZoom = 20\n        const minZoom = 14\n        const bounds = L.latLngBounds([40.708, -74.02], [40.743, -73.961]);\n        const attribution = '<a href=\"https://carto.com/\">Carto</a> | <a href=\"https://www.openstreetmap.org/copyright\">OSM</a> |  <a href=\"https://mapicons.mapsmarker.com/\">Map Icons Collection</a>'\n\n\n        map = L.map(container, {maxZoom, minZoom}).setView([40.7268, -73.9835], 15)\n        // map.scrollWheelZoom.disable()\n\n        L.tileLayer(\n                'https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/light_all/{z}/{x}/{y}{r}.png',\n                {maxZoom, minZoom, bounds, attribution}\n        ).addTo(map)\n\n        //add map to store\n        mapView.set(map)\n    })\n\n    $: if (map && $data) {\n        layer = generateLayer($data).addTo(map);\n    }\n\n    $: {\n        if (map && layer) {\n            //update layer when filter functions changes\n            map.removeLayer(layer);\n            layer = generateLayer($data, feature => $filters.every(filter => filter(feature))).addTo(map);\n            layer.addTo(map);\n        }\n    }\n\n\n</script>\n\n<div id=\"map\" bind:this=\"{container}\"></div>\n\n<style>\n    #map {\n        width: 100%;\n        height: 100%;\n    }\n\n    :global(.awesome-marker i) {\n        font-size: 4px;\n    }\n</style>",
    "<script>\n    import {createEventDispatcher} from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let name = ''\n    export let categories = [];\n    export let showAfter = 0;\n    export let customColors = null;\n\n    //have allCategories be true only if everything else is false\n    $: allCategories = categories.every(item => !item.selected)\n\n    function resetCategoryItems() {\n        //remove all filters, when all button is clicked\n        const updatedCategories = categories.map(item => {\n            item.selected = false;\n            return item;\n        })\n        dispatch('update', updatedCategories)\n    }\n\n    function toggleCategoryItem(selectedItem) {\n        //select one category in the “Categories” section at a time\n        const updatedCategories = categories.map(item => {\n            selectedItem.name === item.name ? item.selected = true : item.selected = false;\n            return item;\n        })\n        dispatch('update', updatedCategories)\n    }\n\n    function getCustomColor(name, type = 'selectedColor'){\n        //check if CustomColor for the category exist\n        const category = name.toLowerCase()\n        if(category in customColors){\n            return customColors[category][type]\n        }else{\n            type ===  'selectedColor' ? '#c7c7c7' : '#929292'\n        }\n    }\n\n    function getBorderColor(item) {\n        return `\n            border-bottom: 5px solid ${item.selected ? getCustomColor(item.name, 'selectedColor') : getCustomColor(item.name, 'color')};\n        `\n    }\n\n\n</script>\n\n\n{#if categories.length > showAfter}\n    <div class=\"filter-header\"><h6 class=\"is-6\">{name}:</h6>\n        <button class=\"button is-small {allCategories ? 'is-info' : ''}\" on:click={resetCategoryItems}>All</button>\n    </div>\n\n    <div class=\"filter-container\">\n        {#each categories as item, name}\n            {#if customColors}\n                <button class=\"button is-small\"\n                        style={getBorderColor(item)}\n                        on:click={toggleCategoryItem(item)}>{item.name}</button>\n            {:else}\n                <button class=\"button is-small {item.selected ? 'is-info' : ''}\"\n                        on:click={toggleCategoryItem(item)}>{item.name}</button>\n            {/if}\n        {/each}\n    </div>\n{/if}\n\n<style>\n    .filter-header {\n        display: flex;\n        flex-direction: row;\n        margin-bottom: 0.4rem;\n    }\n\n    .filter-header button {\n        margin-left: 1rem;\n    }\n\n    .filter-container button {\n        margin-right: 1rem;\n        margin-bottom: 0.2rem;\n    }\n</style>",
    "<script>\n    import {createEventDispatcher} from 'svelte';\n    import { _ } from 'svelte-i18n'\n\n    const dispatch = createEventDispatcher();\n\n    export let name = ''\n    export let options = [];\n\n\n    $: anyOptions = options.every(item => !item.selected)\n\n    function resetOptionItems() {\n        options.map(item => {\n            item.selected = false;\n            return item;\n        })\n        dispatch('update', options)\n    }\n\n    function toggleOptionItem(item) {\n        item.selected = !item.selected;\n        dispatch('update', options)\n    }\n</script>\n\n\n<div class=\"filter-header\"><h6 class=\"is-6\">{name}:</h6>\n    <button class=\"button is-small {anyOptions ? 'is-info' : ''}\" on:click={resetOptionItems}>{$_('filters.options.any')}</button>\n</div>\n<div class=\"filter-container\">\n    {#each options as item, name}\n        <button class=\"button is-small {item.selected ? 'is-info' : ''}\"\n                on:click={toggleOptionItem(item)}>{item.name}</button>\n    {/each}\n</div>\n\n<style>\n    .filter-header {\n        display: flex;\n        flex-direction: row;\n        margin-bottom: 0.4rem;\n    }\n\n    .filter-header button {\n        margin-left: 1rem;\n    }\n\n    .filter-container button {\n        margin-right: 1rem;\n        margin-bottom: 0.2rem;\n    }\n\n</style>",
    "<script>\n    import {createEventDispatcher} from 'svelte';\n    import {sanitizeString} from '../../utils/textFormating'\n\n    const dispatch = createEventDispatcher();\n\n    export let addr;\n\n    let {overallcategory, subcategory, merchantname} = addr.item.properties\n\n\n    function insert(text, index, value) {\n        return text.substr(0, index) + value + text.substr(index);\n    }\n\n    function boldIndices(match) {\n        let addedChar = 0;\n        let text = match.value;\n        match.indices.filter(index => index[1] - index[0] > 1).forEach(index => {\n            text = insert(text, index[0] + addedChar, '<strong>')\n            addedChar += 9\n            text = insert(text, index[1] + addedChar, '</strong>')\n            addedChar += 10\n        })\n        return text\n    }\n\n    $: {\n        //bold matches\n        addr.matches.map(match => {\n            switch (match.key) {\n                case 'properties.merchantname':\n                    merchantname = boldIndices(match)\n                    break;\n                case 'properties.overallcategory':\n                    overallcategory = boldIndices(match)\n                    break;\n                case 'properties.subcategory':\n                    subcategory = boldIndices(match)\n                    break;\n                default:\n                    break;\n            }\n\n        })\n    }\n</script>\n\n\n<li on:click=\"{() => dispatch('set', addr)}\">\n    <div class=\"flex-search\">\n        <p class=\"has-text-grey has-text-right\">{@html sanitizeString(overallcategory)}\n            - {@html sanitizeString(subcategory)}</p>\n        <p>{@html sanitizeString(merchantname)}</p>\n    </div>\n</li>\n\n<style>\n    li {\n        padding: 1rem;\n    }\n\n    li:hover {\n        background-color: #f1f1f1;\n    }\n\n    .flex-search {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}